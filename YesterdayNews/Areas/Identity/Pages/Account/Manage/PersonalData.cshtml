@page
@using System.Security.Claims
@model PersonalDataModel
@{
    ViewData["Title"] = "Personal Data";
    ViewData["ActivePage"] = ManageNavPages.PersonalData;
    var claimsIdentity = (ClaimsIdentity)User.Identity;
    var userId = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier).Value;
}

<div class="container">
    <div class="d-flex align-items-center mb-4">
        <i class="bi bi-database fs-1 me-3 text-primary"></i>
        <div>
            <h1 class="h2 mb-1">@ViewData["Title"]</h1>
            <p class="text-muted mb-0">Manage your personal data</p>
        </div>
    </div>

    <div class="card border-0 shadow-sm">
        <div class="card-body">
            <div class="row">
                <div class="col-lg-8">
                    <p class="mb-3">Your account contains personal data that you have given us. This page allows you to download or delete that data.</p>

                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                        <strong>Deleting this data will not remove your account, we will keep your data forever 😎.</strong>
                    </div>

                    <div class="d-flex gap-3 mt-4">
                        <button type="button"
                                class="btn btn-danger px-4"
                                id="deleteAccountBtn"
                                data-id="@userId">
                            <i class="bi bi-trash-fill me-2"></i>Delete Account
                        </button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/user.js"></script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>

     document.addEventListener("DOMContentLoaded", function () {
            const deleteBtn = document.getElementById("deleteAccountBtn");
            if (!deleteBtn) return;

            deleteBtn.addEventListener("click", function () {
                let userId = this.getAttribute("data-id");

                Swal.fire({
                    title: 'Are you sure?',
                    text: "Deleting your account cannot be reverted! This action is permanent.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3A2512',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        
                        fetch('/User/LockUnlock', { // Updated URL - adjust based on your routing
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                            },
                            body: JSON.stringify(userId)
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Success - show success message and proceed with logout
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'Account has been deleted successfully. Bye Bye 🙋‍🙋‍',
                                    icon: 'success',
                                    timer: 1500,
                                    showConfirmButton: false
                                });

                                // Redirect after short delay
                                setTimeout(() => {
                                    fetch('/Identity/Account/Logout', {
                                        method: 'POST',
                                        headers: {
                                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                                        }
                                    }).then(() => {
                                        window.location.href = "/";
                                    });
                                }, 2500);
                            } else {
                                // Error occurred - show error message
                                if (data.isAdminSelfDelete) {
                                    
                                    Swal.fire({
                                        title: 'Action Not Allowed!',
                                        text: 'Admins cannot delete their own accounts. Wake up dude 🫤',
                                        icon: 'error',
                                        confirmButtonText: 'OK',
                                        confirmButtonColor: '#3A2512'
                                    });
                                } else {
                                    // Other errors
                                    Swal.fire({
                                        title: 'Error!',
                                        text: data.message || 'An error occurred while processing your request.',
                                        icon: 'error',
                                        confirmButtonText: 'OK',
                                        confirmButtonColor: '#3085d6'
                                    });
                                }
                            }
                        })
                        .catch(error => {
                            // Network or server error
                            Swal.fire({
                                title: 'Error!',
                                text: 'Network error occurred. Please try again.',
                                icon: 'error',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#3085d6'
                            });
                            console.error('Error:', error);
                        });
                    }
                });
            });
        });
    </script>
}
