@using YesterdayNews.Utils
@using YesterdayNews.Models
@using System.Text.RegularExpressions
@model YesterdayNews.Models.Db.Article

@functions {
    string SplitPascalCase(string input)
    {
        return Regex.Replace(input, "(\\B[A-Z])", " $1");
    }

    string GetStatusColor(string status)
    {
        return status switch
        {
            StaticConsts.ArticleDraft => "secondary",
            StaticConsts.ArticlePendingReview => "warning",
            StaticConsts.ArticlePublished => "success",
            StaticConsts.ArticleRejected => "danger",
            StaticConsts.ArticleArchived => "dark",
            _ => "primary"
        };
    }
}

<div class="container-fluid">
    <div class="d-flex justify-content-around align-content-center shadow-sm border-0 mt-2 py-2">
        <div class="col-md-6 d-flex align-items-center">
            <!-- Category name with slanted line icon lIKE svt-->
            <div class="d-flex align-items-center">
                <h3 class="text-left mb-0">@Model.Category?.Name.ToUpper()</h3>
                <svg width="24" height="24" viewBox="0 0 24 24" class="me-2" style="transform: rotate(145deg);">
                    <line x1="0" y1="24" x2="24" y2="0" stroke="currentColor" stroke-width="2" />
                </svg>
            </div>
        </div>
        <div class="col-md-2">
            <a asp-controller="Article" asp-action="Index" class="btn btn-outline-secondary form-control btn-sm">
                <i class="bi bi-arrow-left me-2"></i>Back
            </a>
        </div>
    </div>
    </div>

<div class="d-flex justify-content-center m-4 position-relative">
    <div class="ratio ratio-16x9" style="max-width: 550px;">
        @if (!string.IsNullOrEmpty(Model.ImageLink))
        {
            <img src="@Model.ImageLink"
            class="object-fit-cover rounded shadow-sm border-top border-4 border-primary"
            alt="@Model.Headline">
        }
        else
        {
            <img src="~/Placeholder.png"
            class="object-fit-cover rounded shadow-sm border-top border-4 border-primary"
            alt="@Model.Headline">
        }
    </div>
    @if (!User.IsInRole(StaticConsts.Role_Customer))
    {
        
    <span class="badge bg-@GetStatusColor(@Model.ArticleStatus.ToString()) px-2 px-md-3 py-1 py-md-2 fs-6 text-uppercase position-absolute"
    style="top: 1rem; right: calc(50% - 275px + 1rem); transform: translateX(50%); z-index: 10; letter-spacing: 0.05em;">
        @SplitPascalCase(@Model.ArticleStatus.ToString()).ToUpper()
    </span>
    }
</div>

<!-- Headline -->
<div class="text-center mb-3">

    <h1 class="display-5 fw-bold">@Model.Headline</h1>
</div>


<!-- Summary Section -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body text-center">
        <div class="article-content">
            @Html.Raw(Model.ContentSummary)
        </div>
    </div>
</div>

<!-- Full Content -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <h3 class="card-title mb-3">Full Content</h3>
        <div class="article-content">
            @Html.Raw(Model.Content)
        </div>
    </div>
</div>

<!-- Meta Info -->
<div class="d-flex justify-content-between pb-5 pt-2 mx-5">
    <ul class="list-unstyled">
        <li>
            <i class="bi bi-person-circle"></i> Author: @Model.Author.FirstName @Model.Author.LastName
        </li>
        <li>
            <i class="bi bi-calendar"></i> @Model.DateStamp.ToString("MMMM dd, yyyy")
        </li>
    </ul>

    <div class="d-flex align-items-center gap-3">
        <!-- Views Counter -->
        <div class="text-muted">
            <i class="bi bi-eye-fill"></i>
            <span id="viewsCount">@Model.Views</span> views
        </div>

        <!-- Like Button -->
        @if (User.IsInRole(StaticConsts.Role_Customer))
        {
            <div class="like-container">

                <form method="post" asp-action="ToggleLike" asp-controller="Article" asp-route-id="@Model.Id" class="mb-0">
                    <button type="submit" class="btn btn-sm btn-outline-light border-0 position-relative">
                        <i class="bi @(Model.IsLikedByCurrentUser ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                        <span id="likesCount">@Model.Likes</span>
                    </button>
                </form>
                <div id="likeMessage" class="text-success small mt-1" style="display: none;"></div>
            </div>
        }
        else
        {
            <div class="text-muted">
                <i class="bi bi-heart"></i>
                <span>@Model.Likes</span> likes
                <small class="d-block">Login to like</small>
            </div>
        }
    </div>
</div>

<!-- Management Actions -->
@if (!User.IsInRole(StaticConsts.Role_Customer))
{
    
<div class="card border-0 shadow-sm my-5">
        <div class="card-header bg-light">
            <h5 class="mb-0">Manage Article</h5>
        </div>

        <div class="card-body d-flex flex-wrap gap-2 justify-content-center">
            @if (User.IsInRole(StaticConsts.Role_Journalist) || User.IsInRole(StaticConsts.Role_Admin)  && (Model.ArticleStatus.ToString() == StaticConsts.ArticleDraft
           || Model.ArticleStatus.ToString() != StaticConsts.ArticlePendingReview
            || Model.ArticleStatus.ToString() == StaticConsts.ArticleRejected))
            {
                <form asp-action="SubmitForReview" asp-route-id="@Model.Id" method="post">
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-send-check"></i> Submit for Review
                    </button>
                </form>
            }
            @if ((User.IsInRole(StaticConsts.Role_Editor) ||
            User.IsInRole(StaticConsts.Role_Admin)) && 
            (Model.ArticleStatus.ToString() != StaticConsts.ArticleDraft 
            && Model.ArticleStatus.ToString() == StaticConsts.ArticlePendingReview))
            {
                <form asp-action="Publish" asp-route-id="@Model.Id" method="post">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-check-circle"></i> Publish
                    </button>
                </form>
            }
           
            @if ((User.IsInRole(StaticConsts.Role_Editor) || 
            User.IsInRole(StaticConsts.Role_Admin)) && Model.ArticleStatus.ToString() == StaticConsts.ArticlePendingReview)
            {
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#rejectModal">
                    <i class="bi bi-x-square"></i> Reject
                </button>

                <!-- Rejection Modal -->
                <div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="rejectModalLabel">Reject Article</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <form asp-action="Reject" asp-route-id="@Model.Id" method="post">
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="rejectionReason" class="form-label">Reason for rejection:</label>
                                        <textarea class="form-control" id="rejectionReason" name="rejectionReason" rows="3" required></textarea>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-danger">Confirm Rejection</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

            }
          
         
            @if (User.IsInRole(StaticConsts.Role_Editor) || User.IsInRole(StaticConsts.Role_Admin))
            {
                <form asp-action="Archive" asp-route-id="@Model.Id" method="post">
                    <button type="submit" class="btn btn-secondary">
                        <i class="bi bi-archive"></i> Archive
                    </button>
                </form>
            }
            @if (!User.IsInRole(StaticConsts.Role_Customer))
            {

                <a role="button" href="/Article/Edit/@Model.Id" class="btn btn-outline-secondary border-primary">
                    <i class="bi bi-pencil-square"></i> Edit

                </a>


            }
        </div>

        @if (Model.ArticleStatus.ToString() == StaticConsts.ArticleRejected && !string.IsNullOrEmpty(Model.RejectionReason))
        {
            <div class="alert alert-danger mt-3 text-center">
                <h5>Rejection Reason:</h5>
                <p>@Model.RejectionReason</p>
            </div>
        }

    </div>
}

@section Scripts { 
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const likeButtons = document.querySelectorAll('form[asp-action="ToggleLike"] button[type="submit"]');

        likeButtons.forEach(button => {
            button.addEventListener('click', function() {
                
                this.disabled = true;

               
                this.style.cursor = 'wait';

                
            });
        });
    });

</script>
}