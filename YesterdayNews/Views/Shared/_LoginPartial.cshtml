@using Microsoft.AspNetCore.Identity
@using YesterdayNews.Models.Db
@using YesterdayNews.Services.IServices
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ISubscriptionServices SubscriptionService

@{
    var user = await UserManager.GetUserAsync(User);
    var appUser = user as User;
    var hasActiveSubscription = user != null && SubscriptionService.HasActiveSubscription(user.Id);


}
<ul class="navbar-nav text-nowrap">

    @if ((User.IsInRole(StaticConsts.Role_Customer) && !hasActiveSubscription) || !User.Identity.IsAuthenticated)
    {

    <li class="nav-item py-1">

        <button type="submit" class=" btn btn-primary text-white" data-bs-toggle="modal" data-bs-target="#subscribeModal">Subscribe</button>

    </li>
    }

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hi<span class="fw-semibold"> @(appUser?.FirstName! ?? "Guest")</span>
        </a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
        <li class="nav-item">
            <a class="nav-link text-dark text-nowrap" asp-area="Identity" asp-page="/Account/Login">Sign in</a>
    </li>
}
    
</ul>
